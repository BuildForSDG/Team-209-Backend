name: Laravel-CI/CD

on: [push]

jobs:
  PHP-CodeSniffer-Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Current Reference Branch
      run: echo ${{github.ref}}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute PHP Code Sniffer
      run: vendor/bin/phpcs


  LaraStan-Test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Current Reference Branch
      run: echo ${{github.ref}}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute Larastan
      run: vendor/bin/phpstan analyse


  PHPUnit-Feature-Test:
    needs: LaraStan-Test
    runs-on: ubuntu-latest
    container:
      image: paajake/laravel-test-runner:7.4

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Current Reference Branch
      run: echo ${{github.ref}}

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Generate key
      run: php artisan key:generate

    - name: PHP version is
      run: php --version

    - name: Run Testsuite
      env:
        DB_CONNECTION: mysql
        DB_HOST: mysql
        DB_PORT: 3306
        DB_DATABASE: test
        DB_USERNAME: root
        DB_PASSWORD: password

      run: vendor/bin/phpunit tests/

    - name: Upload coverage to Codecov
      if: ${{ github.ref == 'refs/heads/develop' }}
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./clover.xml
        flags:
        name: codecov-umbrella
        fail_ci_if_error: true



  Heroku-Deploy:
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: PHPUnit-Feature-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.0.4 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "team-209-backend" #Must be unique in Heroku
          heroku_email: "paajake@gmail.com"
          buildpack: "" #OPTIONAL
          branch: "develop" #OPTIONAL and DEFAULT - 'HEAD' (a.k.a your current branch)
          dontuseforce: true #OPTIONAL and DEFAULT - false
          usedocker: false #OPTIONAL and DEFAULT - false
          appdir: "" #OPTIONAL and DEFAULT - "". This is useful if the api you're deploying is in a subfolder
          docker_heroku_process_type: "" #OPTIONAL and DEFAULT - "web"
